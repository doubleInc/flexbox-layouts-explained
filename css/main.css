/*
    Navbar with flex example
    by Ali A. (doubleInc@github)

    Note: Classes used so they can be easily interchanged in HTML file instead of
    directly targeting HTML elements.

    No reset or normalize used, all other styling is browser/agent asigned.

    Border colors used to display items better.

*/

.flex-container {
  /* 
  Step 1: The <ul> element is our flex container, set display on it to 'flex'.

  This causes all DIRECT children to become flex items, the <li> in our case. These 
  can be swapped out for <div> or <a>.
  */
  display: flex;

  /* Optional: Set the direction of child element, how to line them up. If left out, 
  defaults to 'row'. */
  flex-direction: row;
}

.flex-item {
  /* Step 2. Spacing direct children elements.

  flex-grow: If all sibling items have the same flex grow value, then all 
  items will receive the same share of remaining space, otherwise it is distributed 
  according to the ratio defined by the different flex grow factors. 
  
  In this case all items are given the same space within their parent container.*/
  flex-grow: 1;
}

/*  Step 3. Responsive mode. 
    Make items stack on a mobile device by changing flex-direction to 'column'. 
*/
@media only screen and (max-device-width: 736px) {
  .flex-container {
    flex-direction: column;

    /*Extra styling to align text in the center.*/
    text-align: center;
  }
}

/*===================================================================
Non flexbox related styling. Only for better visibilty. 
=====================================================================*/

nav li {
  /* remove styling from <li> */
  list-style: none;
}

.border-purple {
  border: 1px solid purple;
}

.border-pink {
  border: 1px solid palevioletred;
}

.border-orange {
  border: 1px solid orangered;
}

.border-green {
  border: 1px solid green;
}

.border-blue {
  border: 1px solid aqua;
}
