/*
    Three column layout example.
    by Ali A. (doubleInc@github)

    Note: Classes used so they can be easily interchanged in HTML file instead of
    directly targeting HTML elements.

    No reset or normalize used, all other styling is browser/agent asigned.

    Border colors used to display items better.

*/

.flex-container {
  /* 
  Step 1: The <div> element is our flex container, set display on it to 'flex'.

  This causes all DIRECT children to become flex items.  */
  display: flex;

  /* Set the direction of child elements to column. */
  flex-direction: column;

  /* Give the container a height value. I used 'vh', relative to 1% of the height 
  of the viewport in use. So in this example, 100vh takes up all the viewing screens height. 
  
  Note: In the vertical direction you need to specify a height for the container. This is 
  different from the horizontal direction, which automatically expands to fit.*/
  min-height: 100vh;
}

.flex-item {
  /* Step 2. Spacing direct children elements.

   In this example, <header> and <footer> are given the same space within the parent
   container. 
   
   Realisticly, we wouldnt assign these to the <header> and <footer>, leaving them blank
   and only assigning it to the <main> element because the content is often unkown.*/
  flex-grow: 1;
}

.flex-item-4 {
  /* Step 3. Grow middle colomn larger than the remaining ones. Give it more room, 
  this example sets the main column to 4. */
  flex-grow: 4;
}

/*  Responsive mode not required.
*/

/*===================================================================
Non flexbox related styling. Only for better visibilty. 
=====================================================================*/

.border-purple {
  border: 1px solid purple;
}

.border-pink {
  border: 1px solid palevioletred;
}

.border-orange {
  border: 1px solid orangered;
}

.border-green {
  border: 1px solid green;
}

.border-blue {
  border: 1px solid aqua;
}
